<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Gestion.Themes"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <!-- Base de los controles con Validaciones -->
    <LinearGradientBrush x:Key="FondoErrorValidacion" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FFF9AEAE" Offset="0.392"/>
        <GradientStop Color="#FFBA2424" Offset="0.984"/>
        <GradientStop Color="#FFD25A5A" Offset="0.91" />
    </LinearGradientBrush>
    <ControlTemplate x:Key="ValidationTemplate">
        <DockPanel x:Name="panelErr" LastChildFill="True" ToolTip="{Binding [0].ErrorContent}">
            <Image x:Name="iconoErr" Stretch="Fill" Source="/Gestion;component/Imagenes/Iconos/exclamation.png" 
                            Width="20" Height="20" DockPanel.Dock="Right"/>
            <!--<Border x:Name="iconoErr" DockPanel.Dock="Right" HorizontalAlignment="Right" BorderBrush="OrangeRed"  Width="20" Height="20" Margin="5" Background="#FFFB0000" CornerRadius="5"  >
                <TextBlock Text="!"  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="16" FontWeight="Bold" FontFamily="Segoe UI Black" Margin="0,0,0,1"></TextBlock>
            </Border>-->
            <AdornedElementPlaceholder />
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ToolTip" Value="{x:Null}" SourceName="panelErr" >
                <Setter TargetName="iconoErr" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="CntrValidado" TargetType="{x:Type Control}">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTemplate}" />
    </Style>
    <SolidColorBrush x:Key="ColorLetraTitulos" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="ColorFondoTitulos" Color="#FFECEAEA"/>
    <Style x:Key="TextBlock.Titulo" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="Background" Value="{StaticResource ColorFondoTitulos}"/>
        <Setter Property="Foreground" Value="{StaticResource ColorLetraTitulos}"/>
        <Setter Property="FontFamily" Value="Segoe UI Light"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Margin" Value="3,0,0,0"/>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="TextBox.Campo" TargetType="{x:Type TextBox}" BasedOn="{StaticResource CntrValidado}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <SolidColorBrush x:Key="Button.Menu.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="Button.Menu.Static.Foreground" Color="White"/>
    <SolidColorBrush x:Key="Button.Comando.Static.Foreground" Color="#FF0A0000"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <LinearGradientBrush x:Key="Button.Menu.MouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF008BFF" Offset="1"/>
        <GradientStop Color="#FFA4D5FD"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Menu" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Menu.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Menu.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <System:Double x:Key="Button.Comando.Image.Size">20</System:Double>
    <System:Double x:Key="Button.Comando.FontSize">14</System:Double>
    <Style x:Key="Button.Comando.Base" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Menu}">
        <Setter Property="Foreground" Value="{StaticResource Button.Comando.Static.Foreground}"/>
    </Style>

    <Style x:Key="Button.Comando.Nuevo" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Comando.Base}">
        <Setter Property="ToolTip" Value="Nuevo" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/plus.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Nuevo" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Ver" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Comando.Base}">
        <Setter Property="ToolTip" Value="Ver" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/view.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Ver" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Editar" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Comando.Base}">
        <Setter Property="ToolTip" Value="Editar" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/edit.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Editar" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Borrar" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Comando.Base}">
        <Setter Property="ToolTip" Value="Borrar" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/delete.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Borrar" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Salir" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Comando.Base}">
        <Setter Property="ToolTip" Value="Salir" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <Image Source="/Gestion;component/Imagenes/Iconos/exit.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button.Comando.Aceptar" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="Guardar" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,5,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/ok.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Guardar" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Cancelar" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="Cancelar" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,5,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/cancel.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Cancelar" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Comando.Volver" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="Volver" />
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,5,0">
                        <Image Source="/Gestion;component/Imagenes/Iconos/back.png" Width="{DynamicResource Button.Comando.Image.Size}" Height="{DynamicResource Button.Comando.Image.Size}" />
                        <TextBlock Text="Volver" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="{DynamicResource Button.Comando.FontSize}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>